{"ast":null,"code":"var _jsxFileName = \"/Users/huangdynasty/Desktop/toptop/frontend/src/components/ProgressBar.jsx\";\nimport React, { Component } from \"react\";\nimport Arrow from \"../components/Arrow\";\nimport Dots from \"../components/Dots\";\n/**\n * ProgressBar is a Component that visualizes to the user where they are in the\n * application, with arrows to navigate between slides as well as dots to\n * indicate the progress in the Carousel.\n */\n\nclass ProgressBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goToHome = () => {\n      this.props.history.push(\"/\");\n    };\n  }\n\n  /**\n   * Renders the two arrows and the dots based on the props passed over. The\n   * arrows have different functions depending on where the progress is:\n   * - if at the start of the progress and left is clicked, the Home page\n   *    should be invoked.\n   * - if at the end of the progress and right is clicked, the Results page\n   *    should be invoked with all the data.\n   */\n  render() {\n    const _this$props = this.props,\n          count = _this$props.count,\n          active = _this$props.active,\n          leftClick = _this$props.leftClick,\n          rightClick = _this$props.rightClick,\n          goToResults = _this$props.goToResults;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Arrow, {\n      direction: \"left\",\n      clickFunction: active > 0 ? leftClick : this.goToHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Dots, {\n      count: count,\n      active: active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Arrow, {\n      direction: \"right\",\n      clickFunction: active < count - 1 ? rightClick : goToResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/huangdynasty/Desktop/toptop/frontend/src/components/ProgressBar.jsx"],"names":["React","Component","Arrow","Dots","ProgressBar","goToHome","props","history","push","render","count","active","leftClick","rightClick","goToResults"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA;;;;;;AAKA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAIlCI,QAJkC,GAIvB,MAAM;AACf,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KANiC;AAAA;;AAQlC;;;;;;;;AAQAC,EAAAA,MAAM,GAAG;AAAA,wBACuD,KAAKH,KAD5D;AAAA,UACCI,KADD,eACCA,KADD;AAAA,UACQC,MADR,eACQA,MADR;AAAA,UACgBC,SADhB,eACgBA,SADhB;AAAA,UAC2BC,UAD3B,eAC2BA,UAD3B;AAAA,UACuCC,WADvC,eACuCA,WADvC;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,aAAa,EAAGH,MAAM,GAAG,CAAT,GAAaC,SAAb,GAAyB,KAAKP,QAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEK,KAAb;AAAoB,MAAA,MAAM,EAAEC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,aAAa,EAAGA,MAAM,GAAGD,KAAK,GAAG,CAAjB,GAAqBG,UAArB,GAAkCC,WAFpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAaD;;AA/BiC;;AAkCpC,eAAeV,WAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Arrow from \"../components/Arrow\";\nimport Dots from \"../components/Dots\";\n\n/**\n * ProgressBar is a Component that visualizes to the user where they are in the\n * application, with arrows to navigate between slides as well as dots to\n * indicate the progress in the Carousel.\n */\nclass ProgressBar extends Component {\n  /**\n   * Sends the user back to the Home page.\n   */\n  goToHome = () => {\n    this.props.history.push(\"/\");\n  }\n\n  /**\n   * Renders the two arrows and the dots based on the props passed over. The\n   * arrows have different functions depending on where the progress is:\n   * - if at the start of the progress and left is clicked, the Home page\n   *    should be invoked.\n   * - if at the end of the progress and right is clicked, the Results page\n   *    should be invoked with all the data.\n   */\n  render() {\n    const { count, active, leftClick, rightClick, goToResults } = this.props;\n    return (\n      <div>\n        <Arrow\n          direction=\"left\"\n          clickFunction={ active > 0 ? leftClick : this.goToHome }\n        />\n        <Dots count={count} active={active} />\n        <Arrow\n          direction=\"right\"\n          clickFunction={ active < count - 1 ? rightClick : goToResults }\n        />\n      </div>\n    );\n  }\n}\n\nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}